{% set version = "3.22.0" %}
{% set sha256 = "45eb4d085875b50108c91fd9168ed17bc9158cc3b1e530ac843b26d9981c3db0" %}
{% set build = 0 %}

{% set version_xy = version.rsplit(".", 1)[0] %}
{% set mpi = mpi or 'mpich' %}
{% if scalar == "real" %}
{% set build = build + 100 %}
{% endif %}
{% set build = build + 200 %}  # [cuda_compiler_version == "None"]


{% if cuda_compiler_version == "None" %}
{% set cuda_major = 0 %}
{% set cuda_target_name = "" %}
{% else %}
{% set cuda_major = environ.get("cuda_compiler_version", "11.8").split(".")[0] | int %}
{% set cuda_target_name = "x86_64-linux" %}  # [linux64]
{% set cuda_target_name = "ppc64le-linux" %}  # [ppc64le]
{% set cuda_target_name = "sbsa-linux" %}  # [aarch64]
{% set cuda_target_name = "" %}  # [osx]
{% endif %}

package:
  name: slepc
  version: {{ version }}

source:
  url: http://slepc.upv.es/download/distrib/slepc-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  skip: true  # [win]
  skip: true  # [cuda_compiler_version not in ("None", "11.8", "12.4")]
  number: {{ build }}
  string: {{ scalar }}_h{{ PKG_HASH }}_{{ build }}  # [cuda_compiler_version == "None"]
  string: cuda{{ cuda_major }}_{{ scalar }}_h{{ PKG_HASH }}_{{ build }}  # [cuda_compiler_version != "None"]
  script_env:
    - CUDA_CONDA_TARGET_NAME={{ cuda_target_name }}
    - CUDA_CONDA_MAJOR={{ cuda_major }}
  run_exports:
    - {{ pin_subpackage('slepc', max_pin='x.x') }}
    - slepc * {{ scalar }}_*                       # [cuda_compiler_version == "None"]
    - slepc * cuda{{ cuda_major }}_{{ scalar }}_*  # [cuda_compiler_version != "None"]
  track_features:
    - slepc_complex  # [scalar == "complex"]
    - slepc_cuda     # [cuda_compiler_version != "None"]
  ignore_run_exports_from:
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - cudatoolkit             # [(cuda_compiler_version or "").startswith("11")]
    {% if cuda_major >= 12 %}
    - cuda-cudart-dev
    - cuda-nvtx-dev
    - libcublas-dev
    - libcufft-dev
    - libcurand-dev
    - libcusolver-dev
    - libcusparse-dev
    {% endif %}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - {{ compiler('fortran') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - make
    - python
    - gnuconfig
    - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]
  host:
    - libblas
    - liblapack
    - {{ mpi }}
    - petsc {{ version_xy }}.* {{ scalar }}_*                       # [cuda_compiler_version == "None"]
    - petsc {{ version_xy }}.* cuda{{ cuda_major }}_{{ scalar }}_*  # [cuda_compiler_version != "None"]
    - scalapack
    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]
    - cudatoolkit                               # [(cuda_compiler_version or "").startswith("11")]
    {% if cuda_major >= 12 %}
    - cuda-cudart-dev
    - cuda-nvtx-dev
    - libcublas-dev
    - libcufft-dev
    - libcurand-dev
    - libcusolver-dev
    - libcusparse-dev
    {% endif %}
  run:
    - {{ mpi }}
    - libblas
    - liblapack
    - scalapack
    - petsc

test:
  requires:
    - pkg-config
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('fortran') }}
    - make
  files:
    - tests/testdlopen.c
    - tests/test10.c
    - tests/test14f.F
    - tests/makefile
  commands:
    - PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig pkg-config --cflags SLEPc
    - PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig pkg-config --libs   SLEPc

about:
  home: http://slepc.upv.es/
  summary: 'SLEPc: Scalable Library for Eigenvalue Problem Computations'
  license: BSD-2-Clause
  license_file: LICENSE.md
  license_family: BSD

extra:
  recipe-maintainers:
    - dalcinl
    - joseeroman
    - minrk
